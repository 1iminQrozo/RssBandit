queue: "Hosted VS2017"
variables: 
  BuildConfiguration: Release
steps:
- task: BatchScript@1
  inputs:
    filename: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\VsDevCmd.bat"
    arguments: -no_logo
    modifyEnvironment: true
  displayName: Setup Environment Variables

- task: NuGetToolInstaller@0
  displayName: Use NuGet 4.5
  inputs:
    versionSpec: 4.5.0

- powershell: |
    
    mkdir $(Build.ArtifactStagingDirectory)\Logs

    # restore 
    msbuild .\source\RssBandit\RssBandit.csproj /t:restore /bl:$(Build.ArtifactStagingDirectory)\Logs\restore.binlog
    
    # version    
    nuget install NerdBank.GitVersioning -SolutionDir $(Build.SourcesDirectory) -Verbosity quiet -ExcludeVersion
    
    $vers = & $(Build.SourcesDirectory)\packages\nerdbank.gitversioning\tools\Get-Version.ps1
    $ver = $vers.SimpleVersion
        
    # Update appxmanifests. These must be done before build.
    $doc = Get-Content ".\source\RssBandit.Package\package.appxmanifest"    
    $doc | % { $_.Replace("1.9.9", "$ver") } | Set-Content ".\source\RssBandit.Package\package.appxmanifest"
    
    
    # Build RSS Bandit
    msbuild .\source\RssBandit\RssBandit.csproj /m /p:Configuration=$(BuildConfiguration) /bl:$(Build.ArtifactStagingDirectory)\Logs\Build-RssBandit.binlog    
    msbuild .\source\RssBandit.Package\RssBandit.Package.wapproj /m /p:Configuration=$(BuildConfiguration) /p:AppxPackageDir="$(Build.ArtifactStagingDirectory)\Store\" /p:UapAppxPackageBuildMode=StoreUpload /bl:$(Build.ArtifactStagingDirectory)\Logs\Build-Package.binlog     
        
  displayName: Build 
  

- task: PublishBuildArtifacts@1
  displayName: Publish Log Artifacts
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)\Logs
    artifactType: container
    artifactName: Logs
  condition: always()

- task: PublishBuildArtifacts@1
  displayName: Publish Store Artifacts
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)\Store
    artifactType: container
    artifactName: Store
  condition: always()