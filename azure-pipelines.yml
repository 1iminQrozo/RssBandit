trigger:
- master
- rel/*

pr:
- master
- rel/*

pool:
  vmImage: windows-latest

stages:
- stage: Build
  variables:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    BuildConfiguration: Release

  jobs:
  - job: Build
    pool:
      vmImage: windows-latest
    strategy:
      matrix:
        Channel_Store:
          ReleaseChannel: Store
        Channel_Nightly:
          ReleaseChannel: Nightly

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK 5.0.x'
      inputs:
        version: 5.0.x
        includePreviewVersions: true

    - task: DotNetCoreCLI@2
      inputs:
        command: custom
        custom: tool
        arguments: install --tool-path . nbgv
      displayName: Install NBGV tool

    - script: nbgv cloud -c -a
      displayName: Set Version

    - powershell: |
        mkdir $(Build.ArtifactStagingDirectory)\$(ReleaseChannel)

        # Set versions

        # Update appxmanifests. These must be done before build.
        [xml]$manifest = Get-Content ".\source\RssBandit.Package\package.appxmanifest"
        $manifest.Package.Identity.Version = "$(GitBuildVersionSimple).0"
        $manifest.Save(".\source\RssBandit.Package\package.appxmanifest")

        [xml]$manifest = Get-Content ".\source\RssBandit.Package\Package-Nightly.appxmanifest"
        $manifest.Package.Identity.Version = "$(GitBuildVersionSimple).0"
        $manifest.Save(".\source\RssBandit.Package\Package-Nightly.appxmanifest")
        
        # Update badges
        [xml]$badge = Get-Content ".\buildconfig\ci_badge.svg"
        $badge.svg.g[1].text[2].InnerText = "$(GitBuildVersionSimple).0"
        $badge.svg.g[1].text[3].InnerText = "$(GitBuildVersionSimple).0"
        $badge.Save("$(Build.ArtifactStagingDirectory)\$(ReleaseChannel)\ci_badge.svg")

        [xml]$badge = Get-Content ".\buildconfig\store_badge.svg"
        $badge.svg.g[1].text[2].InnerText = "$(GitBuildVersionSimple).0"
        $badge.svg.g[1].text[3].InnerText = "$(GitBuildVersionSimple).0"
        $badge.Save("$(Build.ArtifactStagingDirectory)\$(ReleaseChannel)\stable_badge.svg")        
      displayName: Update manifest versions

    - task: MSBuild@1
      displayName: Build Package
      inputs:
        solution: source/RssBandit.Package/RssBandit.Package.wapproj
        msbuildArguments: /p:AppxPackageDir="$(Build.ArtifactStagingDirectory)\$(ReleaseChannel)\\"
        configuration: $(BuildConfiguration)
        maximumCpuCount: true

    - publish: $(Build.ArtifactStagingDirectory)\$(ReleaseChannel)
      displayName: Publish Build Packages
      artifact: $(ReleaseChannel)
      
    - publish: buildconfig
      displayName: Publish signing scripts
      artifact: SigningScripts      

- stage: CodeSign
  condition: and(succeeded('Build'), not(eq(variables['build.reason'], 'PullRequest')))
  jobs:
  - deployment: CodeSign
    displayName: Code Signing
    pool:
      vmImage: windows-latest
    environment: Code Sign - CI
    variables:
    - group: NuGet Package Explorer Sign Client
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download Nightly Artifacts
            inputs:
              artifactName: Nightly
              targetPath: $(Pipeline.Workspace)/ToSign/Nightly

          - download: current
            artifact: SigningScripts

          - task: DotNetCoreCLI@2
            inputs:
              command: custom
              custom: tool
              arguments: install --tool-path . SignClient
            displayName: Install SignTool tool

          - pwsh: |
              .\SignClient "Sign" `
              --baseDirectory "$(Pipeline.Workspace)\ToSign" `
              --input "**/*.{appxbundle,appinstaller}" `
              --config "$(Pipeline.Workspace)\SigningScripts\appsettings.json" `
              --filelist "$(Pipeline.Workspace)\SigningScripts\filelist.txt" `
              --user "$(SignClientUser)" `
              --secret "$(SignClientSecret)" `
              --name "RSS Bandit" `
              --description "RSS Bandit" `
              --descriptionUrl "https://github.com/RssBandit/RssBandit"
            displayName: Authenticode Sign artifacts

          - publish: $(Pipeline.Workspace)/ToSign/Nightly
            displayName: Publish Signed Choco Packages
            artifact: NightlySigned